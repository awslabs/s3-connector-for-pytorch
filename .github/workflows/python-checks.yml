name: Python Checks

on:
  workflow_call:

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-Dwarnings"
  CI_REGION: ${{ vars.S3_REGION }}
  CI_BUCKET: ${{ vars.S3_BUCKET }}
  CI_PREFIX: ${{ vars.S3_PREFIX }}

jobs:
  test:
    name: Tests
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up stable Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ github.job }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # Manually install CPU-only version of torch so we're not carrying around giant GPU drivers/kernels
          python -m pip install torch --extra-index-url https://download.pytorch.org/whl/cpu
          python -m pip install -e "s3torchconnectorclient[test]"
          python -m pip install -e "s3torchconnector[test]"

      - name: Client unit tests
        run: pytest s3torchconnectorclient/python/tst/unit --hypothesis-profile ci --hypothesis-show-statistics
      - name: Dataset unit tests
        run: pytest s3torchconnector/tst/unit --hypothesis-profile ci --hypothesis-show-statistics


  integration-test:
    name: Integration tests
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.ACTIONS_IAM_ROLE }}
          aws-region: ${{ vars.S3_REGION }}

      - name: Set up stable Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ github.job }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # Manually install CPU-only version of torch so we're not carrying around giant GPU drivers/kernels
          python -m pip install torch --extra-index-url https://download.pytorch.org/whl/cpu
          python -m pip install -e "s3torchconnectorclient[test,e2e]"
          python -m pip install -e "s3torchconnector[test,e2e]"

      - name: Dataset integration tests
        run: pytest s3torchconnector/tst/e2e -n auto


  lint:
    name: Python lints
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up stable Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ github.job }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 black
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 s3torchconnector/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 s3torchconnectorclient/python --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Lint with Black
        uses: psf/black@stable
        with:
          options: "--check --verbose"
          src: "."

  dependencies:
    name: Python dependencies checks
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pipreqs safety

      - name: Generate requirements
        run: |
          pipreqs s3torchconnectorclient
          pipreqs s3torchconnector

      - name: Security vulnerabilities check s3torchconnectorclient
        run: safety check -r s3torchconnectorclient/requirements.txt

      - name: Audit s3torchconnectorclient dependencies
        uses: pypa/gh-action-pip-audit@v1.0.0
        with:
          inputs: "s3torchconnectorclient"

# TODO: Re-enable after publishing
#      - name: Audit s3torchconnector dependencies
#        uses: pypa/gh-action-pip-audit@v1.0.0
#        with:
#          inputs: "s3torchconnector"

      - name: Security vulnerabilities check s3torchconnector
        run: safety check -r s3torchconnector/requirements.txt
