name: Rust Checks

on:
  workflow_call:

permissions:
  contents: read

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-Dwarnings"
  RUST_TOOLCHAIN: 1.84.1

jobs:
  deny:
    runs-on: ubuntu-22.04
    name: Licenses
    strategy:
      matrix:
        checks:
        # The advisories check is used to detect issues for crates by looking in an advisory database.
          - advisories
        # The bans check is used to deny (or allow) specific crates, as well as detect and handle multiple
        # versions of the same crate.
        # The licenses check is used to verify that every crate you use has license terms you find acceptable.
        # The sources check ensures crates only come from sources you trust.
          - bans licenses sources
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up stable Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{env.RUST_TOOLCHAIN }}

      - name: Run cargo deny
        uses: EmbarkStudios/cargo-deny-action@v2
        with:
          command: check ${{ matrix.checks }}
          manifest-path: s3torchconnectorclient/Cargo.toml

  clippy:
    runs-on: ubuntu-22.04
    name: Clippy
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up stable Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{env.RUST_TOOLCHAIN }}
          components: clippy

      - name: Cargo cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ github.job }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Lint with clippy
        run: cargo clippy --all-targets --all-features --manifest-path s3torchconnectorclient/Cargo.toml

  tests:
    runs-on: ${{ matrix.runner }}
    name: Rust tests
    strategy:
      matrix:
        # macos-15-intel planned to end August 2027
        runner: [ubuntu-22.04, macos-15-intel]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up stable Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{env.RUST_TOOLCHAIN }}

      - name: Build Rust tests
        run: cargo test --no-default-features --no-run --manifest-path s3torchconnectorclient/Cargo.toml

      - name: Run Rust tests
        run: cargo test --no-default-features --manifest-path s3torchconnectorclient/Cargo.toml
