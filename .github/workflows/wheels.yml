name: Build Wheels

on:
  push:
    tags: [ "v[0-9]+.[0-9]+.[0-9]+" ]
    branches: [ "dependabot/*", "main", "workflow/*" ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  S3_REGION: ${{ vars.S3_REGION }}
  S3_BUCKET: ${{ vars.S3_BUCKET }}
  S3_PREFIX: ${{ vars.S3_PREFIX }}
  S3_EXPRESS_BUCKET: ${{ vars.S3_EXPRESS_BUCKET }}
  S3_EXPRESS_REGION: ${{ vars.S3_EXPRESS_REGION }}
  PROFILE_IAM_ROLE: ${{vars.PROFILE_IAM_ROLE}}
  S3_PROFILE_BUCKET: ${{vars.S3_PROFILE_BUCKET}}
  S3_EXPRESS_PROFILE_BUCKET: ${{vars.S3_EXPRESS_PROFILE_BUCKET}}

jobs:
  generate_third_party_licenses:
    name: Generate THIRD-PARTY-LICENSES
    uses: ./.github/workflows/generate_third_party_licenses.yml

  build_wheels:
    name: Wheels for ${{ matrix.python }} - ${{ matrix.builder.kind }} - ${{ matrix.builder.arch }}
    runs-on: ${{ matrix.builder.runner }}
    needs: generate_third_party_licenses
    strategy:
      fail-fast: false
      matrix:
        python:
          - cp38
          - cp39
          - cp310
          - cp311
          - cp312
          - cp313
        builder:
          - runner: codebuild-${{ vars.CODEBUILD_PROJECT_NAME }}-${{ github.run_id }}-${{ github.run_attempt }}-ubuntu-7.0-large
            kind: manylinux
            arch: x86_64
          - runner: codebuild-${{ vars.CODEBUILD_PROJECT_NAME }}-${{ github.run_id }}-${{ github.run_attempt }}-arm-3.0-large
            kind: manylinux
            arch: aarch64
#          - runner: ubuntu-20.04
#            kind: manylinux
#            arch: x86_64
          - runner: macos-13
            kind: macosx
            arch: x86_64
          - runner: macos-14
            kind: macosx
            arch: arm64
        # cp313 macos-13 (x86_64) is not supported by PyTorch
        exclude:
          - python: cp313
            builder:
              runner: macos-13
              kind: macosx
              arch: x86_64

    steps:
      - uses: actions/checkout@v5
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5
        id: creds
        with:
          role-to-assume: ${{ vars.ACTIONS_IAM_ROLE }}
          aws-region: ${{ vars.S3_REGION }}
          # extend role time out to 2 hours
          role-duration-seconds: 7200

      - uses: actions/download-artifact@v5
        with:
          name: ${{ needs.generate_third_party_licenses.outputs.artifact_name }}

      - name: Rename third party license
        run: |
          mv NOTICE_DEFAULT THIRD-PARTY-LICENSES

      # actions/setup-python requires /Users/runner/hostedtoolcache to exist to work properly
      # with macosx due to fixed shared library path
      # https://github.com/actions/setup-python/blob/main/docs/advanced-usage.md#macos
      - name: Create hostedtoolcache dir for macosx
        if: ${{ matrix.builder.kind == 'macosx' }}
        run: |
          mkdir -p /Users/runner/hostedtoolcache

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"
          check-latest: true

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.2.1
        with:
          package-dir: s3torchconnectorclient
          output-dir: wheelhouse
          only: ${{ matrix.python }}-${{ matrix.builder.kind }}_${{ matrix.builder.arch }}

      - uses: actions/upload-artifact@v4
        with:
          path: "./wheelhouse/*.whl"
          name: wheels-${{ matrix.python }}-${{ matrix.builder.kind }}_${{ matrix.builder.arch }}

  build_source_wheels:
    name: Build source wheels for ${{ matrix.build_target }}
    runs-on: ubuntu-24.04
    needs: generate_third_party_licenses
    strategy:
      fail-fast: false
      matrix:
        build_target:
          - s3torchconnector
          - s3torchconnectorclient

    steps:
      - uses: actions/checkout@v5

      - uses: actions/download-artifact@v5
        with:
          name: ${{ needs.generate_third_party_licenses.outputs.artifact_name }}

      - name: Copy license files
        run: |
          cp README.md ${{ matrix.build_target }}/
          cp LICENSE ${{ matrix.build_target }}/
          cp NOTICE_DEFAULT ${{ matrix.build_target }}/THIRD-PARTY-LICENSES
          cp NOTICE ${{ matrix.build_target }}/

      - name: Build wheel
        run: |
          cd ${{ matrix.build_target }}
          python -m pip install build
          python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          path: "./${{ matrix.build_target }}/dist/*"
          name: wheels-${{ matrix.build_target }}
  merge:
    name: Merge the wheels
    runs-on: ubuntu-latest
    needs:
      - build_wheels
      - build_source_wheels
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
           name: wheels
           pattern: wheels-*
